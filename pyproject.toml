[tool.poetry]
name = "colibri"
version = "0.0.0"
description = "Reusable processing components for Colibri coding chalange"
authors = ["Pavlo Rasskazov <rasskazovp@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pyspark = "^3.5.4"
pyarrow = {version = "^14.0.1", optional = true}
pyright = {version = "1.1.365", optional = true}
pytest = {version = "^8.3.2", optional = true}
pytest-cov = {version = "^4.1.0", optional = true}
pytest-order = {version = "^1.2.1", optional = true}
pytest-spark = {version = "^0.6.0", optional = true}

[tool.poetry.extras]
ci-spark = [
    "pytest",
    "pytest-cov",
    "pytest-order",
    "coverage",
    "pyright",
    "install-jdk",
    "pytest-spark",
    "pyspark",
    "delta-spark",
    "pyarrow",
]

[tool.poetry.group.dev.dependencies]
databricks-sdk = "^0.40.0"
databricks-dlt = "^0.3.0"
databricks-connect = "^16.1.0"
mock = "^5.1.0"
pytest = "^8.3.2"
ruff = "^0.9.2"
pre-commit = "^4.0.1"
bandit = {extras = ["toml"], version = "^1.8.2"}
ipykernel = "^6.29.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[pytest]
testpaths = "tests"
pythonpath = "src"

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = ["F", "I", "UP", "N", "C4", "LOG", "G", "SIM", "PL", "PERF", "RUF", "D"]
ignore = ["D100", "D104", "D105", "D203", "D213", "D401", "F821"]
fixable = ["ALL"]

[tool.bandit]
exclude_dirs = [".databricks", ".github", ".idea", ".pytest_cache", ".ruff_cache", ".venv", "dist", "tests"]
skips = ["B608"]
